@import "constant";

@function get-selector($breakpoint, $prefix) {
  @if $breakpoint == '' {
    @return #{$prefix}-
  } @else {
    @return #{$prefix}-#{$breakpoint}-;
  }
}

@mixin buttons($color, $background, $hoverColor) {
  color: $color;
  background-color: $background;
  border-color: $background;
  &:focus, &:hover {
    background-color: $hoverColor;
    text-decoration: none;
  }
  &.btn-outline {
    background: none;
    color: $background;
  }
}

@mixin animation($args...) {
  -webkit-animation: $args;
  -moz-animation: $args;
  -o-animation: $args;
  animation: $args;
}

@mixin input-placeholder {
  &::placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

@mixin text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin transform($args...) {
  -webkit-transform: $args;
  -moz-transform: $args;
  -o-transform: $args;
  transform: $args;
}

@mixin extra-large {
  @media #{$extra-large} {
    @content;
  }
}

@mixin large-up {
  @media #{$large-up} {
    @content;
  }
}

@mixin large-down {
  @media #{$large-down} {
    @content;
  }
}

@mixin medium-up {
  @media #{$medium-up} {
    @content;
  }
}

@mixin medium-only {
  @media #{$medium-only} {
    @content;
  }
}

@mixin medium-down {
  @media #{$medium-down} {
    @content;
  }
}

@mixin small-only {
  @media #{$small-only} {
    @content;
  }
}

@mixin small-up {
  @media #{$small-up} {
    @content;
  }
}

@mixin extra-small-only {
  @media #{$extra-small-only} {
    @content;
  }
}

@mixin grid-col($viewport, $i) {
  .col-#{$viewport}-#{$i} {
    flex: 0 0 percentage($i / 12);
    max-width: percentage($i / 12);
  }
}

@mixin grid-offset($viewport, $i) {
  .offset-#{$viewport}-#{$i} {
    margin-left: percentage($i / 12);
  }
}

@mixin grid-col-model($viewport) {
  @for $i from 1 to 13 {
    @include grid-col($viewport, $i);
  }
  @for $i from 1 to 13 {
    @include grid-offset($viewport, $i);
  }
}

@mixin model-item($val, $breakpoint) {
  .#{get-selector($breakpoint, 'mar')}#{$val} {
    margin: #{$val}px;
  }

  .#{get-selector($breakpoint, 'mar')}tb-#{$val} {
    margin-top: #{$val}px;
    margin-bottom: #{$val}px;
  }

  .#{get-selector($breakpoint, 'mar')}lr-#{$val} {
    margin-left: #{$val}px;
    margin-right: #{$val}px;
  }

  .#{get-selector($breakpoint, 'mar')}l-#{$val} {
    margin-left: #{$val}px;
  }

  .#{get-selector($breakpoint, 'mar')}t-#{$val} {
    margin-top: #{$val}px;
  }

  .#{get-selector($breakpoint, 'mar')}r-#{$val} {
    margin-right: #{$val}px;
  }
  .#{get-selector($breakpoint, 'mar')}b-#{$val} {
    margin-bottom: #{$val}px;
  }

  .#{get-selector($breakpoint, 'pad')}#{$val} {
    padding: #{$val}px;
  }

  .#{get-selector($breakpoint, 'pad')}tb-#{$val} {
    padding-top: #{$val}px;
    padding-bottom: #{$val}px;
  }

  .#{get-selector($breakpoint, 'pad')}lr-#{$val} {
    padding-left: #{$val}px;
    padding-right: #{$val}px;
  }

  .#{get-selector($breakpoint, 'pad')}l-#{$val} {
    padding-left: #{$val}px;
  }

  .#{get-selector($breakpoint, 'pad')}t-#{$val} {
    padding-top: #{$val}px;
  }

  .#{get-selector($breakpoint, 'pad')}r-#{$val} {
    padding-right: #{$val}px;
  }

  .#{get-selector($breakpoint, 'pad')}b-#{$val} {
    padding-bottom: #{$val}px;
  }
}

@mixin box-model($collection, $breakpoint) {
  @for $i from 0 to length($collection) {
    $item: nth($collection, $i+1);
    @include model-item(nth($item, 1), $breakpoint);
  }
}

@mixin tooltip($breakpoint) {
  .tooltip {
    &.#{get-selector($breakpoint, 'pos')}top {
      &:hover {
        &:before, &:after {
          bottom: 100%;
          left: 50%;
          top: unset;
          right: unset;
          @include transform(translateX(-50%));
        }

        &:after {
          margin: 0 0 6px;
        }

        &:before {
          border-color: transparent;
          border-top-color: $gray-darker;
          border-width: 6px;
          border-bottom-width: 0;
        }
      }
    }

    &.#{get-selector($breakpoint, 'pos')}bottom {
      &:hover {
        &:before, &:after {
          left: 50%;
          top: 100%;
          right: unset;
          bottom: unset;
          @include transform(translateX(-50%));
        }

        &:after {
          margin: 6px 0 0;
        }

        &:before {
          border-color: transparent;
          border-bottom-color: $gray-darker;
          border-width: 6px;
          border-top-width: 0;
        }
      }
    }

    &.#{get-selector($breakpoint, 'pos')}left {
      &:hover {
        &:before, &:after {
          top: 50%;
          right: 100%;
          left: unset;
          bottom: unset;
          @include transform(translateY(-50%));
        }

        &:after {
          margin: 0 6px 0 0;
        }

        &:before {
          border-color: transparent;
          border-left-color: $gray-darker;
          border-width: 6px;
          border-right-width: 0;
        }
      }
    }

    &.#{get-selector($breakpoint, 'pos')}right {
      &:hover {
        &:before, &:after {
          top: 50%;
          left: 100%;
          right: unset;
          bottom: unset;
          @include transform(translateY(-50%));
        }

        &:after {
          margin: 0 0 0 6px;
        }

        &:before {
          border-color: transparent;
          border-right-color: $gray-darker;
          border-width: 6px;
          border-left-width: 0;
        }
      }
    }
  }
}

